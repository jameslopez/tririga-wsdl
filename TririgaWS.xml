<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://ws.tririga.com" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" name="TririgaWS" targetNamespace="http://ws.tririga.com">
  <wsdl:types>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://gui.dto.ws.tririga.com" xmlns:ns0="http://dto.ws.tririga.com" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://gui.dto.ws.tririga.com">
  <xsd:import namespace="http://dto.ws.tririga.com"/>
  <xsd:complexType name="Section">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="fields" nillable="true" type="tns:ArrayOfField"/>
      <xsd:element minOccurs="0" name="guiSectionId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="guiSectionName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="label" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="readOnly" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="refModuleId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="refObjectTypeId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="rows" nillable="true" type="tns:ArrayOfGuiRow"/>
      <xsd:element minOccurs="0" name="type" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="typeId" type="xsd:int"/>
      <xsd:element minOccurs="0" name="visible" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfSection">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Section" nillable="true" type="tns:Section"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfField">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Field" nillable="true" type="tns:Field"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GUI">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="childRecordId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="label" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="moduleId" type="xsd:int"/>
      <xsd:element minOccurs="0" name="moduleName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="objectTypeName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="popupId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="recordId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="recordName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="saveOnPopup" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="singleTab" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="state" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="tabs" nillable="true" type="tns:ArrayOfTab"/>
      <xsd:element minOccurs="0" name="type" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Tab">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="instruction" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="label" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="sections" nillable="true" type="tns:ArrayOfSection"/>
      <xsd:element minOccurs="0" name="tabInformation" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="url" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="visible" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfTab">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Tab" nillable="true" type="tns:Tab"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Field">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="dataType" nillable="true" type="ns0:DataType"/>
      <xsd:element minOccurs="0" name="displayValue" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="guiRootClassificationId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="guiRootClassificationName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="guiSectionId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="guiSectionName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="label" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="listId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="listModuleId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="liveLink" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="locatorField" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="locatorModuleId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="mobileField" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="mobileFieldSeq" type="xsd:long"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="readOnly" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="refObjectTypeId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="refSpecId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="required" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="rootClassification" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="rootClassificationId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="sectionName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="specId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="type" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="unitOfMeasure" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="unitOfMeasureType" type="xsd:long"/>
      <xsd:element minOccurs="0" name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfGuiRow">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="GuiRow" nillable="true" type="tns:GuiRow"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GuiRow">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="fields" nillable="true" type="tns:ArrayOfField"/>
      <xsd:element minOccurs="0" name="recordId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfGUI">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="GUI" nillable="true" type="tns:GUI"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://lang.java" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://lang.java">
  <xsd:complexType name="Exception">
    <xsd:complexContent>
      <xsd:extension base="tns:Throwable">
        <xsd:sequence/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Throwable">
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://content.dto.ws.tririga.com" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://content.dto.ws.tririga.com">
  <xsd:complexType name="ContentField">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="boName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fieldLabel" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fieldName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fieldType" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="moduleName" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InvalidDocumentTypeException">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfContentField">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="ContentField" nillable="true" type="tns:ContentField"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Response">
    <xsd:complexContent>
      <xsd:extension base="tns:Content">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="checksum" type="xsd:long"/>
          <xsd:element minOccurs="0" name="length" nillable="true" type="xsd:long"/>
          <xsd:element minOccurs="0" name="message" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="mimeType" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="status" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="updatedDate" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfContent-1-">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="Content" nillable="true" type="tns:Content"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InvalidContentException">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfResponse">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Response" nillable="true" type="tns:Response"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Content">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="content" nillable="true" type="xsd:base64Binary"/>
      <xsd:element name="fieldName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fileName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="path" nillable="true" type="xsd:string"/>
      <xsd:element name="recordId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ws.tririga.com" xmlns:ns4="http://errors.ws.tririga.com" xmlns:ns3="http://lang.java" xmlns:ns2="http://gui.dto.ws.tririga.com" xmlns:ns1="http://content.dto.ws.tririga.com" xmlns:ns0="http://dto.ws.tririga.com" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://ws.tririga.com">
  <xsd:import namespace="http://dto.ws.tririga.com"/>
  <xsd:import namespace="http://content.dto.ws.tririga.com"/>
  <xsd:import namespace="http://gui.dto.ws.tririga.com"/>
  <xsd:complexType name="ArrayOfLong">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="long" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfString">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="string" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRecordDataHeaders" type="tns:getRecordDataHeaders"/>
  <xsd:complexType name="getRecordDataHeaders">
    <xsd:sequence>
      <xsd:element name="recordIds" type="tns:ArrayOfLong"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRecordDataHeadersResponse" type="tns:getRecordDataHeadersResponse"/>
  <xsd:complexType name="getRecordDataHeadersResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfRecord"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="acceptActionItems" type="tns:acceptActionItems"/>
  <xsd:complexType name="acceptActionItems">
    <xsd:sequence>
      <xsd:element name="ActionItems" type="ns0:ArrayOfActionItem"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="acceptActionItemsResponse" type="tns:acceptActionItemsResponse"/>
  <xsd:complexType name="acceptActionItemsResponse">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getNamedQueryType" type="tns:getNamedQueryType"/>
  <xsd:complexType name="getNamedQueryType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="moduleName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="queryName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getNamedQueryTypeResponse" type="tns:getNamedQueryTypeResponse"/>
  <xsd:complexType name="getNamedQueryTypeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getHierarchyMetadataByModuleId" type="tns:getHierarchyMetadataByModuleId"/>
  <xsd:complexType name="getHierarchyMetadataByModuleId">
    <xsd:sequence>
      <xsd:element name="moduleId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getHierarchyMetadataByModuleIdResponse" type="tns:getHierarchyMetadataByModuleIdResponse"/>
  <xsd:complexType name="getHierarchyMetadataByModuleIdResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:HierarchyObjectType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getObjectTypeByName" type="tns:getObjectTypeByName"/>
  <xsd:complexType name="getObjectTypeByName">
    <xsd:sequence>
      <xsd:element name="moduleName" type="xsd:string"/>
      <xsd:element name="objectTypeName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getObjectTypeByNameResponse" type="tns:getObjectTypeByNameResponse"/>
  <xsd:complexType name="getObjectTypeByNameResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:ObjectType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getDefaultGUIActions" type="tns:getDefaultGUIActions"/>
  <xsd:complexType name="getDefaultGUIActions">
    <xsd:sequence>
      <xsd:element name="guiId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getDefaultGUIActionsResponse" type="tns:getDefaultGUIActionsResponse"/>
  <xsd:complexType name="getDefaultGUIActionsResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfTransition"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteCurrencyConversionRates" type="tns:deleteCurrencyConversionRates"/>
  <xsd:complexType name="deleteCurrencyConversionRates">
    <xsd:sequence>
      <xsd:element name="conversionRateIds" type="tns:ArrayOfLong"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteCurrencyConversionRatesResponse" type="tns:deleteCurrencyConversionRatesResponse"/>
  <xsd:complexType name="deleteCurrencyConversionRatesResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:ResponseHelperHeader"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getProjects" type="tns:getProjects"/>
  <xsd:complexType name="getProjects">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getProjectsResponse" type="tns:getProjectsResponse"/>
  <xsd:complexType name="getProjectsResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfProject"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getChecksum" type="tns:getChecksum"/>
  <xsd:complexType name="getChecksum">
    <xsd:sequence>
      <xsd:element name="content" type="ns1:Content"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getChecksumResponse" type="tns:getChecksumResponse"/>
  <xsd:complexType name="getChecksumResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="checksum" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getGUIs" type="tns:getGUIs"/>
  <xsd:complexType name="getGUIs">
    <xsd:sequence>
      <xsd:element name="objectTypeId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getGUIsResponse" type="tns:getGUIsResponse"/>
  <xsd:complexType name="getGUIsResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns2:ArrayOfGUI"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="upload" type="tns:upload"/>
  <xsd:complexType name="upload">
    <xsd:sequence>
      <xsd:element name="content" type="ns1:Content"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="uploadResponse" type="tns:uploadResponse"/>
  <xsd:complexType name="uploadResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="return" type="ns1:Response"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getHierarchyMetadata" type="tns:getHierarchyMetadata"/>
  <xsd:complexType name="getHierarchyMetadata">
    <xsd:sequence>
      <xsd:element name="moduleId" type="xsd:long"/>
      <xsd:element name="objectTypeId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getHierarchyMetadataResponse" type="tns:getHierarchyMetadataResponse"/>
  <xsd:complexType name="getHierarchyMetadataResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:HierarchyObjectType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedQueryContinue" type="tns:runNamedQueryContinue"/>
  <xsd:complexType name="runNamedQueryContinue">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="continuationToken" type="ns0:ContinuationToken"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedQueryContinueResponse" type="tns:runNamedQueryContinueResponse"/>
  <xsd:complexType name="runNamedQueryContinueResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:QueryResult"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getCurrencies" type="tns:getCurrencies"/>
  <xsd:complexType name="getCurrencies">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getCurrenciesResponse" type="tns:getCurrenciesResponse"/>
  <xsd:complexType name="getCurrenciesResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfCurrency"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getDefaultGUIStructure" type="tns:getDefaultGUIStructure"/>
  <xsd:complexType name="getDefaultGUIStructure">
    <xsd:sequence>
      <xsd:element name="objectTypeId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getDefaultGUIStructureResponse" type="tns:getDefaultGUIStructureResponse"/>
  <xsd:complexType name="getDefaultGUIStructureResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns2:GUI"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getGUI" type="tns:getGUI"/>
  <xsd:complexType name="getGUI">
    <xsd:sequence>
      <xsd:element name="guiId" type="xsd:long"/>
      <xsd:element name="recordId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getGUIResponse" type="tns:getGUIResponse"/>
  <xsd:complexType name="getGUIResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns2:GUI"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRecordState" type="tns:getRecordState"/>
  <xsd:complexType name="getRecordState">
    <xsd:sequence>
      <xsd:element name="recordIds" type="tns:ArrayOfLong"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRecordStateResponse" type="tns:getRecordStateResponse"/>
  <xsd:complexType name="getRecordStateResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfState"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="uploadFrom" type="tns:uploadFrom"/>
  <xsd:complexType name="uploadFrom">
    <xsd:sequence>
      <xsd:element name="contents" type="ns1:ArrayOfContent-1-"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="uploadFromResponse" type="tns:uploadFromResponse"/>
  <xsd:complexType name="uploadFromResponse">
    <xsd:sequence>
      <xsd:element name="reponses" nillable="true" type="ns1:ArrayOfResponse"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getGUIStateTransitions" type="tns:getGUIStateTransitions"/>
  <xsd:complexType name="getGUIStateTransitions">
    <xsd:sequence>
      <xsd:element name="objectTypeId" type="xsd:long"/>
      <xsd:element name="guiId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getGUIStateTransitionsResponse" type="tns:getGUIStateTransitionsResponse"/>
  <xsd:complexType name="getGUIStateTransitionsResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfState"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="keywordSearch" type="tns:keywordSearch"/>
  <xsd:complexType name="keywordSearch">
    <xsd:sequence>
      <xsd:element name="projectId" nillable="true" type="xsd:long"/>
      <xsd:element name="moduleId" type="xsd:long"/>
      <xsd:element name="objectTypeId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="keyword" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="keywordSearchResponse" type="tns:keywordSearchResponse"/>
  <xsd:complexType name="keywordSearchResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfKeywordSearchResult"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getObjectTypeActions" type="tns:getObjectTypeActions"/>
  <xsd:complexType name="getObjectTypeActions">
    <xsd:sequence>
      <xsd:element name="moduleId" type="xsd:long"/>
      <xsd:element name="objectTypeId" type="xsd:long"/>
      <xsd:element name="recordId" type="xsd:long"/>
      <xsd:element name="guiId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getObjectTypeActionsResponse" type="tns:getObjectTypeActionsResponse"/>
  <xsd:complexType name="getObjectTypeActionsResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:ObjectTypeAction"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runDynamicQuery" type="tns:runDynamicQuery"/>
  <xsd:complexType name="runDynamicQuery">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="projectName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="moduleName" type="xsd:string"/>
      <xsd:element name="objectTypeNames" nillable="true" type="tns:ArrayOfString"/>
      <xsd:element name="guiNames" nillable="true" type="tns:ArrayOfString"/>
      <xsd:element minOccurs="0" name="associatedModuleName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="associatedObjectTypeName" nillable="true" type="xsd:string"/>
      <xsd:element name="projectScope" type="xsd:int"/>
      <xsd:element name="displayFields" type="ns0:ArrayOfDisplayLabel"/>
      <xsd:element name="associatedDisplayFields" nillable="true" type="ns0:ArrayOfDisplayLabel"/>
      <xsd:element name="fieldSortOrders" nillable="true" type="ns0:ArrayOfFieldSortOrder"/>
      <xsd:element name="filters" nillable="true" type="ns0:ArrayOfFilter"/>
      <xsd:element name="associationFilters" nillable="true" type="ns0:ArrayOfAssociationFilter"/>
      <xsd:element name="start" type="xsd:int"/>
      <xsd:element name="maximumResultCount" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runDynamicQueryResponse" type="tns:runDynamicQueryResponse"/>
  <xsd:complexType name="runDynamicQueryResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:QueryResult"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runDynamicQueryContinue" type="tns:runDynamicQueryContinue"/>
  <xsd:complexType name="runDynamicQueryContinue">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="continuationToken" type="ns0:ContinuationToken"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runDynamicQueryContinueResponse" type="tns:runDynamicQueryContinueResponse"/>
  <xsd:complexType name="runDynamicQueryContinueResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:QueryResult"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedQueryMultiBo" type="tns:runNamedQueryMultiBo"/>
  <xsd:complexType name="runNamedQueryMultiBo">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="projectName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="moduleName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="queryName" type="xsd:string"/>
      <xsd:element name="filters" nillable="true" type="ns0:ArrayOfFilter"/>
      <xsd:element name="start" type="xsd:int"/>
      <xsd:element name="maximumResultCount" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedQueryMultiBoResponse" type="tns:runNamedQueryMultiBoResponse"/>
  <xsd:complexType name="runNamedQueryMultiBoResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:QueryMultiBoResult"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="saveRecord" type="tns:saveRecord"/>
  <xsd:complexType name="saveRecord">
    <xsd:sequence>
      <xsd:element name="IntegrationRecords" type="ns0:ArrayOfIntegrationRecord"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="saveRecordResponse" type="tns:saveRecordResponse"/>
  <xsd:complexType name="saveRecordResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:ResponseHelperHeader"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedMetricQuery" type="tns:runNamedMetricQuery"/>
  <xsd:complexType name="runNamedMetricQuery">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="moduleName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="queryName" type="xsd:string"/>
      <xsd:element name="metricQueryfilters" nillable="true" type="ns0:ArrayOfMetricQueryFilter"/>
      <xsd:element minOccurs="0" name="groupBy" nillable="true" type="ns0:GroupBy"/>
      <xsd:element name="start" type="xsd:int"/>
      <xsd:element name="maximumResultCount" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedMetricQueryResponse" type="tns:runNamedMetricQueryResponse"/>
  <xsd:complexType name="runNamedMetricQueryResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:MetricQueryResult"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="download" type="tns:download"/>
  <xsd:complexType name="download">
    <xsd:sequence>
      <xsd:element name="content" type="ns1:Content"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="downloadResponse" type="tns:downloadResponse"/>
  <xsd:complexType name="downloadResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="return" type="ns1:Response"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAssociatedRecords" type="tns:getAssociatedRecords"/>
  <xsd:complexType name="getAssociatedRecords">
    <xsd:sequence>
      <xsd:element name="recordId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="associationString" type="xsd:string"/>
      <xsd:element name="maxResults" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAssociatedRecordsResponse" type="tns:getAssociatedRecordsResponse"/>
  <xsd:complexType name="getAssociatedRecordsResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfAssociation"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deassociateRecords" type="tns:deassociateRecords"/>
  <xsd:complexType name="deassociateRecords">
    <xsd:sequence>
      <xsd:element name="Associations" type="ns0:ArrayOfAssociation"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deassociateRecordsResponse" type="tns:deassociateRecordsResponse"/>
  <xsd:complexType name="deassociateRecordsResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:ResponseHelperHeader"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getContentLength" type="tns:getContentLength"/>
  <xsd:complexType name="getContentLength">
    <xsd:sequence>
      <xsd:element name="content" type="ns1:Content"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getContentLengthResponse" type="tns:getContentLengthResponse"/>
  <xsd:complexType name="getContentLengthResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="length" nillable="true" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getListItems" type="tns:getListItems"/>
  <xsd:complexType name="getListItems">
    <xsd:sequence>
      <xsd:element name="listId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getListItemsResponse" type="tns:getListItemsResponse"/>
  <xsd:complexType name="getListItemsResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfListItem"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getUserLicenses" type="tns:getUserLicenses"/>
  <xsd:complexType name="getUserLicenses">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getUserLicensesResponse" type="tns:getUserLicensesResponse"/>
  <xsd:complexType name="getUserLicensesResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfResponseHelper"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedMetricQueryContinue" type="tns:runNamedMetricQueryContinue"/>
  <xsd:complexType name="runNamedMetricQueryContinue">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="continuationToken" type="ns0:ContinuationToken"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedMetricQueryContinueResponse" type="tns:runNamedMetricQueryContinueResponse"/>
  <xsd:complexType name="runNamedMetricQueryContinueResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:MetricQueryResult"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedQueryMultiBoContinue" type="tns:runNamedQueryMultiBoContinue"/>
  <xsd:complexType name="runNamedQueryMultiBoContinue">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="continuationToken" type="ns0:ContinuationToken"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedQueryMultiBoContinueResponse" type="tns:runNamedQueryMultiBoContinueResponse"/>
  <xsd:complexType name="runNamedQueryMultiBoContinueResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:QueryMultiBoResult"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="register" type="tns:register"/>
  <xsd:complexType name="register">
    <xsd:sequence>
      <xsd:element name="arg0" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="registerResponse" type="tns:registerResponse"/>
  <xsd:complexType name="registerResponse">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="copy" type="tns:copy"/>
  <xsd:complexType name="copy">
    <xsd:sequence>
      <xsd:element name="fromRecordId" type="xsd:long"/>
      <xsd:element name="toRecordId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="copyResponse" type="tns:copyResponse"/>
  <xsd:complexType name="copyResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="status" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getObjectTypeListByModuleName" type="tns:getObjectTypeListByModuleName"/>
  <xsd:complexType name="getObjectTypeListByModuleName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="moduleName" type="xsd:string"/>
      <xsd:element name="isStandAlone" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getObjectTypeListByModuleNameResponse" type="tns:getObjectTypeListByModuleNameResponse"/>
  <xsd:complexType name="getObjectTypeListByModuleNameResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfBaseObjectType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getProjectId" type="tns:getProjectId"/>
  <xsd:complexType name="getProjectId">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="projectName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getProjectIdResponse" type="tns:getProjectIdResponse"/>
  <xsd:complexType name="getProjectIdResponse">
    <xsd:sequence>
      <xsd:element name="out" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getGUIsByName" type="tns:getGUIsByName"/>
  <xsd:complexType name="getGUIsByName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="objectTypeName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="moduleName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getGUIsByNameResponse" type="tns:getGUIsByNameResponse"/>
  <xsd:complexType name="getGUIsByNameResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns2:ArrayOfGUI"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getModuleId" type="tns:getModuleId"/>
  <xsd:complexType name="getModuleId">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="moduleName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getModuleIdResponse" type="tns:getModuleIdResponse"/>
  <xsd:complexType name="getModuleIdResponse">
    <xsd:sequence>
      <xsd:element name="out" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getObjectType" type="tns:getObjectType"/>
  <xsd:complexType name="getObjectType">
    <xsd:sequence>
      <xsd:element name="objectTypeId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getObjectTypeResponse" type="tns:getObjectTypeResponse"/>
  <xsd:complexType name="getObjectTypeResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:ObjectType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getApplicationInfo" type="tns:getApplicationInfo"/>
  <xsd:complexType name="getApplicationInfo">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getApplicationInfoResponse" type="tns:getApplicationInfoResponse"/>
  <xsd:complexType name="getApplicationInfoResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:ApplicationInfo"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getHttpSession" type="tns:getHttpSession"/>
  <xsd:complexType name="getHttpSession">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getHttpSessionResponse" type="tns:getHttpSessionResponse"/>
  <xsd:complexType name="getHttpSessionResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:HttpSession"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getTargetRecords" type="tns:getTargetRecords"/>
  <xsd:complexType name="getTargetRecords">
    <xsd:sequence>
      <xsd:element name="objectTypeId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="sectionName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getTargetRecordsResponse" type="tns:getTargetRecordsResponse"/>
  <xsd:complexType name="getTargetRecordsResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfAssociation"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="putCurrencyConversionRates" type="tns:putCurrencyConversionRates"/>
  <xsd:complexType name="putCurrencyConversionRates">
    <xsd:sequence>
      <xsd:element name="CurrencyConversionRates" type="ns0:ArrayOfCurrencyConversionRate"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="putCurrencyConversionRatesResponse" type="tns:putCurrencyConversionRatesResponse"/>
  <xsd:complexType name="putCurrencyConversionRatesResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfCurrencyConversionRate"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getObjectTypeListByModuleId" type="tns:getObjectTypeListByModuleId"/>
  <xsd:complexType name="getObjectTypeListByModuleId">
    <xsd:sequence>
      <xsd:element name="moduleId" type="xsd:long"/>
      <xsd:element name="isStandAlone" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getObjectTypeListByModuleIdResponse" type="tns:getObjectTypeListByModuleIdResponse"/>
  <xsd:complexType name="getObjectTypeListByModuleIdResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfBaseObjectType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="terminateSession" type="tns:terminateSession"/>
  <xsd:complexType name="terminateSession">
    <xsd:sequence>
      <xsd:element name="id" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="terminateSessionResponse" type="tns:terminateSessionResponse"/>
  <xsd:complexType name="terminateSessionResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:ResponseHelper"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="delete" type="tns:delete"/>
  <xsd:complexType name="delete">
    <xsd:sequence>
      <xsd:element name="content" type="ns1:Content"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="deleteResponse" type="tns:deleteResponse"/>
  <xsd:complexType name="deleteResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="content" type="ns1:Response"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedQueryMultiBoLocalized" type="tns:runNamedQueryMultiBoLocalized"/>
  <xsd:complexType name="runNamedQueryMultiBoLocalized">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="projectName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="moduleName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="queryName" type="xsd:string"/>
      <xsd:element name="filters" nillable="true" type="ns0:ArrayOfFilter"/>
      <xsd:element name="start" type="xsd:int"/>
      <xsd:element name="maximumResultCount" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedQueryMultiBoLocalizedResponse" type="tns:runNamedQueryMultiBoLocalizedResponse"/>
  <xsd:complexType name="runNamedQueryMultiBoLocalizedResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:QueryMultiBoResult"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="downloadTo" type="tns:downloadTo"/>
  <xsd:complexType name="downloadTo">
    <xsd:sequence>
      <xsd:element name="contents" type="ns1:ArrayOfContent-1-"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="downloadToResponse" type="tns:downloadToResponse"/>
  <xsd:complexType name="downloadToResponse">
    <xsd:sequence>
      <xsd:element name="reponses" nillable="true" type="ns1:ArrayOfResponse"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAssociationDefinitionsByName" type="tns:getAssociationDefinitionsByName"/>
  <xsd:complexType name="getAssociationDefinitionsByName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="moduleName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAssociationDefinitionsByNameResponse" type="tns:getAssociationDefinitionsByNameResponse"/>
  <xsd:complexType name="getAssociationDefinitionsByNameResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfAssociationDefinition"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getObjectTypeId" type="tns:getObjectTypeId"/>
  <xsd:complexType name="getObjectTypeId">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="moduleName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getObjectTypeIdResponse" type="tns:getObjectTypeIdResponse"/>
  <xsd:complexType name="getObjectTypeIdResponse">
    <xsd:sequence>
      <xsd:element name="out" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRequiredGuiFieldNames" type="tns:getRequiredGuiFieldNames"/>
  <xsd:complexType name="getRequiredGuiFieldNames">
    <xsd:sequence>
      <xsd:element name="guiId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRequiredGuiFieldNamesResponse" type="tns:getRequiredGuiFieldNamesResponse"/>
  <xsd:complexType name="getRequiredGuiFieldNamesResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:ResponseHelperHeader"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="triggerActions" type="tns:triggerActions"/>
  <xsd:complexType name="triggerActions">
    <xsd:sequence>
      <xsd:element name="TriggerActions" type="ns0:ArrayOfTriggerActions"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="triggerActionsResponse" type="tns:triggerActionsResponse"/>
  <xsd:complexType name="triggerActionsResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:ResponseHelperHeader"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getHierarchyMetadataByModuleName" type="tns:getHierarchyMetadataByModuleName"/>
  <xsd:complexType name="getHierarchyMetadataByModuleName">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="moduleName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getHierarchyMetadataByModuleNameResponse" type="tns:getHierarchyMetadataByModuleNameResponse"/>
  <xsd:complexType name="getHierarchyMetadataByModuleNameResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:HierarchyObjectType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getChildren" type="tns:getChildren"/>
  <xsd:complexType name="getChildren">
    <xsd:sequence>
      <xsd:element name="recordId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getChildrenResponse" type="tns:getChildrenResponse"/>
  <xsd:complexType name="getChildrenResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfChildRecord"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getDefaultGuiId" type="tns:getDefaultGuiId"/>
  <xsd:complexType name="getDefaultGuiId">
    <xsd:sequence>
      <xsd:element name="objectTypeId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getDefaultGuiIdResponse" type="tns:getDefaultGuiIdResponse"/>
  <xsd:complexType name="getDefaultGuiIdResponse">
    <xsd:sequence>
      <xsd:element name="out" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getCurrencyConversionGroups" type="tns:getCurrencyConversionGroups"/>
  <xsd:complexType name="getCurrencyConversionGroups">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getCurrencyConversionGroupsResponse" type="tns:getCurrencyConversionGroupsResponse"/>
  <xsd:complexType name="getCurrencyConversionGroupsResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfConversionGroup"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRootRecordId" type="tns:getRootRecordId"/>
  <xsd:complexType name="getRootRecordId">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="moduleName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getRootRecordIdResponse" type="tns:getRootRecordIdResponse"/>
  <xsd:complexType name="getRootRecordIdResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:ResponseHelper"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getCurrencyConversionRates" type="tns:getCurrencyConversionRates"/>
  <xsd:complexType name="getCurrencyConversionRates">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getCurrencyConversionRatesResponse" type="tns:getCurrencyConversionRatesResponse"/>
  <xsd:complexType name="getCurrencyConversionRatesResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfCurrencyConversionRate"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getModules" type="tns:getModules"/>
  <xsd:complexType name="getModules">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getModulesResponse" type="tns:getModulesResponse"/>
  <xsd:complexType name="getModulesResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfModule"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAllAssociatedRecords" type="tns:getAllAssociatedRecords"/>
  <xsd:complexType name="getAllAssociatedRecords">
    <xsd:sequence>
      <xsd:element name="recordIds" type="tns:ArrayOfLong"/>
      <xsd:element minOccurs="0" name="associationString" type="xsd:string"/>
      <xsd:element name="maxResults" nillable="true" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAllAssociatedRecordsResponse" type="tns:getAllAssociatedRecordsResponse"/>
  <xsd:complexType name="getAllAssociatedRecordsResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfAssociationRecord"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getDefaultGUI" type="tns:getDefaultGUI"/>
  <xsd:complexType name="getDefaultGUI">
    <xsd:sequence>
      <xsd:element name="recordId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getDefaultGUIResponse" type="tns:getDefaultGUIResponse"/>
  <xsd:complexType name="getDefaultGUIResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns2:GUI"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getActionItems" type="tns:getActionItems"/>
  <xsd:complexType name="getActionItems">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:element name="getActionItemsResponse" type="tns:getActionItemsResponse"/>
  <xsd:complexType name="getActionItemsResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfActionItem"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedQuery" type="tns:runNamedQuery"/>
  <xsd:complexType name="runNamedQuery">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="projectName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="moduleName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="queryName" type="xsd:string"/>
      <xsd:element name="filters" nillable="true" type="ns0:ArrayOfFilter"/>
      <xsd:element name="start" type="xsd:int"/>
      <xsd:element name="maximumResultCount" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="runNamedQueryResponse" type="tns:runNamedQueryResponse"/>
  <xsd:complexType name="runNamedQueryResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:QueryResult"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAssociationDefinitions" type="tns:getAssociationDefinitions"/>
  <xsd:complexType name="getAssociationDefinitions">
    <xsd:sequence>
      <xsd:element name="objectTypeId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAssociationDefinitionsResponse" type="tns:getAssociationDefinitionsResponse"/>
  <xsd:complexType name="getAssociationDefinitionsResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfAssociationDefinition"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAvailableActions" type="tns:getAvailableActions"/>
  <xsd:complexType name="getAvailableActions">
    <xsd:sequence>
      <xsd:element name="recordIds" type="tns:ArrayOfLong"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getAvailableActionsResponse" type="tns:getAvailableActionsResponse"/>
  <xsd:complexType name="getAvailableActionsResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfAvailableAction"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getContentFieldsDefinition" type="tns:getContentFieldsDefinition"/>
  <xsd:complexType name="getContentFieldsDefinition">
    <xsd:sequence>
      <xsd:element name="moduleName" type="xsd:string"/>
      <xsd:element name="boName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getContentFieldsDefinitionResponse" type="tns:getContentFieldsDefinitionResponse"/>
  <xsd:complexType name="getContentFieldsDefinitionResponse">
    <xsd:sequence>
      <xsd:element name="contentFields" nillable="true" type="ns1:ArrayOfContentField"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getListByTypes" type="tns:getListByTypes"/>
  <xsd:complexType name="getListByTypes">
    <xsd:sequence>
      <xsd:element name="objectTypeIds" type="tns:ArrayOfLong"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getListByTypesResponse" type="tns:getListByTypesResponse"/>
  <xsd:complexType name="getListByTypesResponse">
    <xsd:sequence>
      <xsd:element name="out" nillable="true" type="ns0:ArrayOfListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="associateRecords" type="tns:associateRecords"/>
  <xsd:complexType name="associateRecords">
    <xsd:sequence>
      <xsd:element name="Associations" type="ns0:ArrayOfAssociation"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="associateRecordsResponse" type="tns:associateRecordsResponse"/>
  <xsd:complexType name="associateRecordsResponse">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="out" type="ns0:ResponseHelperHeader"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Exception" nillable="true" type="ns3:Exception"/>
  <xsd:element name="InvalidArgumentException" nillable="true" type="ns4:InvalidArgumentException"/>
  <xsd:element name="RecordDoesNotExistException" nillable="true" type="ns4:RecordDoesNotExistException"/>
  <xsd:element name="ActionItemInvalidException" nillable="true" type="ns4:ActionItemInvalidException"/>
  <xsd:element name="QueryDoesNotExistException" nillable="true" type="ns4:QueryDoesNotExistException"/>
  <xsd:element name="ModuleDoesNotExistException" nillable="true" type="ns4:ModuleDoesNotExistException"/>
  <xsd:element name="ObjectTypeDoesNotExistException" nillable="true" type="ns4:ObjectTypeDoesNotExistException"/>
  <xsd:element name="GuiDoesNotExistException" nillable="true" type="ns4:GuiDoesNotExistException"/>
  <xsd:element name="InvalidContentException" nillable="true" type="ns1:InvalidContentException"/>
  <xsd:element name="InvalidDocumentTypeException" nillable="true" type="ns1:InvalidDocumentTypeException"/>
  <xsd:element name="AccessException" nillable="true" type="ns4:AccessException"/>
  <xsd:element name="InvalidContinuationTokenException" nillable="true" type="ns4:InvalidContinuationTokenException"/>
  <xsd:element name="ProjectDoesNotExistException" nillable="true" type="ns4:ProjectDoesNotExistException"/>
  <xsd:element name="ListDoesNotExistException" nillable="true" type="ns4:ListDoesNotExistException"/>
  <xsd:element name="ActionDoesNotExistException" nillable="true" type="ns4:ActionDoesNotExistException"/>
</xsd:schema>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://errors.ws.tririga.com" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://errors.ws.tririga.com">
  <xsd:complexType name="ProjectDoesNotExistException">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="GuiDoesNotExistException">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="ActionDoesNotExistException">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="InvalidArgumentException">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="RecordDoesNotExistException">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="ObjectTypeDoesNotExistException">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="QueryDoesNotExistException">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="InvalidContinuationTokenException">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="AccessException">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="ListDoesNotExistException">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="ModuleDoesNotExistException">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="ActionItemInvalidException">
    <xsd:sequence/>
  </xsd:complexType>
</xsd:schema>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://dto.ws.tririga.com" xmlns:ns0="http://ws.tririga.com" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.ws.tririga.com">
  <xsd:import namespace="http://ws.tririga.com"/>
  <xsd:complexType name="ArrayOfRow">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Row" nillable="true" type="tns:Row"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FieldKey">
    <xsd:sequence>
      <xsd:element name="fieldName" type="xsd:string"/>
      <xsd:element name="sectionName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractQueryResponseHelper">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="boId" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="recordId" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ConversionGroup">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfAssociationFilter">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="AssociationFilter" nillable="true" type="tns:AssociationFilter"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AssociationRecord">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="associations" nillable="true" type="tns:ArrayOfAssociation"/>
      <xsd:element minOccurs="0" name="recordId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfTriggerActions">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="TriggerActions" nillable="true" type="tns:TriggerActions"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfSubAction">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="SubAction" nillable="true" type="tns:SubAction"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ListType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="dependantList" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="label" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="language" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="parentId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="parentProduct" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="product" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="sourceClassId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="sourceObjectTypeId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="sourceType" type="xsd:int"/>
      <xsd:element minOccurs="0" name="system" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="type" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Project">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfAvailableAction">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="AvailableAction" nillable="true" type="tns:AvailableAction"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MetricQueryResponseHelper">
    <xsd:complexContent>
      <xsd:extension base="tns:AbstractQueryResponseHelper">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="metricQueryResponseColumns" nillable="true" type="tns:ArrayOfMetricQueryResponseColumn"/>
          <xsd:element minOccurs="0" name="primaryGroupByDisplayValue" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="primaryGroupById" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="primaryGroupByLabel" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="primaryGroupByName" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="primaryGroupByValue" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="secondaryGroupByDisplayValue" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="secondaryGroupById" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="secondaryGroupByLabel" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="secondaryGroupByName" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="secondaryGroupByValue" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfQueryResponseHelper">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="QueryResponseHelper" nillable="true" type="tns:QueryResponseHelper"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BaseObjectType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="childBaseObjectTypes" nillable="true" type="tns:ArrayOfChildBaseObjectType"/>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IntegrationRows">
    <xsd:sequence>
      <xsd:element name="action" type="xsd:string"/>
      <xsd:element minOccurs="0" name="fields" nillable="true" type="tns:ArrayOfIntegrationField"/>
      <xsd:element minOccurs="0" name="recordId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="rowIndex" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MetricQueryFilter">
    <xsd:complexContent>
      <xsd:extension base="tns:AbstractMetricQueryCriteria">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="operator" nillable="true" type="xsd:int"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfExtendedFormulaParam">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="ExtendedFormulaParam" nillable="true" type="tns:ExtendedFormulaParam"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfFilter">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Filter" nillable="true" type="tns:Filter"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RecordField">
    <xsd:complexContent>
      <xsd:extension base="tns:Field">
        <xsd:sequence/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfQueryResponseColumn">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="QueryResponseColumn" nillable="true" type="tns:QueryResponseColumn"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ListItem">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="languageId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="sequenceNumber" type="xsd:long"/>
      <xsd:element minOccurs="0" name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfCurrencyConversionRate">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="CurrencyConversionRate" nillable="true" type="tns:CurrencyConversionRate"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Section">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="fields" nillable="true" type="tns:ArrayOfField"/>
      <xsd:element minOccurs="0" name="guiSectionId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="guiSectionName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="label" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="refModuleId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="refObjectTypeId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="rows" nillable="true" type="tns:ArrayOfRow"/>
      <xsd:element minOccurs="0" name="sections" nillable="true" type="tns:ArrayOfSection"/>
      <xsd:element minOccurs="0" name="type" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="typeId" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfRecordField">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="RecordField" nillable="true" type="tns:RecordField"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfRecordSection">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="RecordSection" nillable="true" type="tns:RecordSection"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="QueryMultiBoResponseHelper">
    <xsd:complexContent>
      <xsd:extension base="tns:AbstractQueryResponseHelper">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="queryMultiBoResponseColumns" nillable="true" type="tns:ArrayOfQueryMultiBoResponseColumn"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AssociationDefinition">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="associatedModuleId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="associatedObjectTypeId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="associationName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="inverseAssociationName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="moduleName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="sourceModuleId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="sourceObjectTypeId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractMetricQueryCriteria">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="fieldName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FinancialToken">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="dateType" type="xsd:int"/>
      <xsd:element minOccurs="0" name="endDate" type="xsd:dateTime"/>
      <xsd:element minOccurs="0" name="groupId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="startDate" type="xsd:dateTime"/>
      <xsd:element minOccurs="0" name="transactionType" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="unitOfMeasure" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="unitOfMeasureType" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RecordSection">
    <xsd:complexContent>
      <xsd:extension base="tns:Section">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="recordFields" nillable="true" type="tns:ArrayOfRecordField"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CurrencyConversionRate">
    <xsd:sequence>
      <xsd:element name="conversionGroup" type="xsd:string"/>
      <xsd:element name="conversionRate" type="xsd:double"/>
      <xsd:element name="endDate" type="xsd:dateTime"/>
      <xsd:element name="fromCurrency" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:long"/>
      <xsd:element name="startDate" type="xsd:dateTime"/>
      <xsd:element name="toCurrency" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ObjectType">
    <xsd:complexContent>
      <xsd:extension base="tns:HierarchyObjectType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="approvalHistory" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="auditAccess" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="auditActions" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="auditDataChanges" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="createdById" type="xsd:long"/>
          <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="displayName" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="hasCalendar" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="moduleId" type="xsd:int"/>
          <xsd:element minOccurs="0" name="requireExplanation" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="sections" nillable="true" type="tns:ArrayOfSection"/>
          <xsd:element minOccurs="0" name="showSingleTab" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="type" type="xsd:int"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Transition">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="action" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="actionId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="actionSequence" type="xsd:long"/>
      <xsd:element minOccurs="0" name="label" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="nextState" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="subActions" nillable="true" type="tns:ArrayOfSubAction"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="QueryResponseHelper">
    <xsd:complexContent>
      <xsd:extension base="tns:AbstractQueryResponseHelper">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="assocBoId" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="assocId" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="queryResponseColumns" nillable="true" type="tns:ArrayOfQueryResponseColumn"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfSection">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Section" nillable="true" type="tns:Section"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ContinuationToken">
    <xsd:sequence>
      <xsd:element name="tokenString" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfListType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListType" nillable="true" type="tns:ListType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfAssociation">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Association" nillable="true" type="tns:Association"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AvailableAction">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="availableTransitions" nillable="true" type="tns:ArrayOfTransition"/>
      <xsd:element minOccurs="0" name="currentState" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="recordId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfIntegrationRows">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="IntegrationRows" nillable="true" type="tns:IntegrationRows"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfIntegrationField">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="IntegrationField" nillable="true" type="tns:IntegrationField"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfMetricQueryResponseHelper">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="MetricQueryResponseHelper" nillable="true" type="tns:MetricQueryResponseHelper"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfMetricQueryFilter">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="MetricQueryFilter" nillable="true" type="tns:MetricQueryFilter"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfQueryMultiBoResponseColumn">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="QueryMultiBoResponseColumn" nillable="true" type="tns:QueryMultiBoResponseColumn"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IntegrationRecord">
    <xsd:sequence>
      <xsd:element name="actionName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="guiId" type="xsd:long"/>
      <xsd:element name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="key" nillable="true" type="xsd:string"/>
      <xsd:element name="moduleId" type="xsd:int"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectPath" nillable="true" type="xsd:string"/>
      <xsd:element name="objectTypeId" type="xsd:long"/>
      <xsd:element name="objectTypeName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="parentId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="projectId" type="xsd:long"/>
      <xsd:element name="sections" type="tns:ArrayOfIntegrationSection-1-"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RegularFormula">
    <xsd:sequence/>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfAssociationDefinition">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="AssociationDefinition" nillable="true" type="tns:AssociationDefinition"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Filter">
    <xsd:sequence>
      <xsd:element name="dataType" type="xsd:int"/>
      <xsd:element name="fieldName" type="xsd:string"/>
      <xsd:element name="operator" type="xsd:int"/>
      <xsd:element name="sectionName" type="xsd:string"/>
      <xsd:element name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MetricQueryResponseColumn">
    <xsd:complexContent>
      <xsd:extension base="tns:QueryResponseColumn">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="aggregate" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="thresholdRangeColor" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="thresholdRangeIconUrl" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="QueryMultiBoResult">
    <xsd:complexContent>
      <xsd:extension base="tns:AbstractQueryResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="queryMultiBoResponseHelpers" nillable="true" type="tns:ArrayOfQueryMultiBoResponseHelper"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ExtendedFormulaParam">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="associationChain" nillable="true" type="tns:ArrayOfAssociationDefinition"/>
      <xsd:element minOccurs="0" name="fieldKey" nillable="true" type="tns:FieldKey"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChildRecord">
    <xsd:complexContent>
      <xsd:extension base="tns:Record">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="childCount" type="xsd:long"/>
          <xsd:element minOccurs="0" name="path" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfMetricQueryResponseColumn">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="MetricQueryResponseColumn" nillable="true" type="tns:MetricQueryResponseColumn"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FieldSortOrder">
    <xsd:sequence>
      <xsd:element name="dataType" type="xsd:int"/>
      <xsd:element minOccurs="0" name="fieldLabel" nillable="true" type="xsd:string"/>
      <xsd:element name="fieldName" type="xsd:string"/>
      <xsd:element name="sectionName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Field">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="associationString" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="attributeSequence" type="xsd:long"/>
      <xsd:element minOccurs="0" name="autoPopulate" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="colSpan" type="xsd:int"/>
      <xsd:element minOccurs="0" name="columnSeq" type="xsd:long"/>
      <xsd:element minOccurs="0" name="dataType" nillable="true" type="tns:DataType"/>
      <xsd:element minOccurs="0" name="defaultValue" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="dependent" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="displayValue" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="editUOMList" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="endRow" type="xsd:int"/>
      <xsd:element minOccurs="0" name="fieldId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="financialToken" nillable="true" type="tns:FinancialToken"/>
      <xsd:element minOccurs="0" name="formula" nillable="true" type="tns:Formula"/>
      <xsd:element minOccurs="0" name="fullPath" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="generateOnCreate" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="guiFieldId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="guiFieldName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="guiFieldType" type="xsd:int"/>
      <xsd:element minOccurs="0" name="guiId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="guiRootClassificationId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="guiRootClassificationName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="guiSectionId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="guiSectionName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="guiTabId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="hierarchyObjectId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="label" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="listId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="listModuleId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="liveLink" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="locatorField" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="locatorModuleId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="mobileField" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="mobileFieldSeq" type="xsd:long"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="precision" type="xsd:long"/>
      <xsd:element minOccurs="0" name="queryId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="queryName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="readOnly" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="required" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="resultColumn" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="rollupSource" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="rootClassification" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="rootClassificationId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="sectionName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="seq" type="xsd:long"/>
      <xsd:element minOccurs="0" name="specId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="specTemplateId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="stagingTableField" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="startRow" type="xsd:int"/>
      <xsd:element minOccurs="0" name="subAttributeType" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="subCategoryId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="sumThisField" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="type" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="unitOfMeasure" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="unitOfMeasureSourceAttribute" type="xsd:long"/>
      <xsd:element minOccurs="0" name="unitOfMeasureType" type="xsd:long"/>
      <xsd:element minOccurs="0" name="validation" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="value" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="valueId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfRecord">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Record" nillable="true" type="tns:Record"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Formula">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="extendedFormula" nillable="true" type="tns:ExtendedFormula"/>
      <xsd:element minOccurs="0" name="regularFormula" nillable="true" type="tns:RegularFormula"/>
      <xsd:element minOccurs="0" name="type" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="QueryResponseColumn">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="displayValue" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="index" type="xsd:int"/>
      <xsd:element minOccurs="0" name="label" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="section" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="uom" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IntegrationSection">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="fields" nillable="true" type="tns:ArrayOfIntegrationField"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element minOccurs="0" name="rows" nillable="true" type="tns:ArrayOfIntegrationRows"/>
      <xsd:element minOccurs="0" name="type" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponseHelperHeader">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="anyFailed" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="failed" type="xsd:int"/>
      <xsd:element minOccurs="0" name="responseHelpers" nillable="true" type="tns:ArrayOfResponseHelper"/>
      <xsd:element minOccurs="0" name="successful" type="xsd:int"/>
      <xsd:element minOccurs="0" name="total" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfFieldSortOrder">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="FieldSortOrder" nillable="true" type="tns:FieldSortOrder"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="State">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="recordId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="state" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="trans" nillable="true" type="tns:ArrayOfTransition"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChildBaseObjectType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Currency">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="abbreviation" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="decimal" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="delimiter" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="format" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="symbol" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DataType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="type" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="typeCode" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MetricQueryResult">
    <xsd:complexContent>
      <xsd:extension base="tns:AbstractQueryResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="metricQueryResponseHelpers" nillable="true" type="tns:ArrayOfMetricQueryResponseHelper"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GroupBy">
    <xsd:complexContent>
      <xsd:extension base="tns:AbstractMetricQueryCriteria">
        <xsd:sequence/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfCurrency">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Currency" nillable="true" type="tns:Currency"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfProject">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Project" nillable="true" type="tns:Project"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Association">
    <xsd:complexContent>
      <xsd:extension base="tns:AssociationDefinition">
        <xsd:sequence>
          <xsd:element name="associatedRecordId" type="xsd:long"/>
          <xsd:element minOccurs="0" name="associatedRecordName" nillable="true" type="xsd:string"/>
          <xsd:element name="associationName" type="xsd:string"/>
          <xsd:element name="recordId" type="xsd:long"/>
          <xsd:element minOccurs="0" name="reverseAssociationName" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Module">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ActionItem">
    <xsd:sequence>
      <xsd:element name="taskId" type="xsd:long"/>
      <xsd:element name="workflowId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractQueryResult">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="continuationToken" nillable="true" type="tns:ContinuationToken"/>
      <xsd:element minOccurs="0" name="totalResults" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="HierarchyObjectType">
    <xsd:complexContent>
      <xsd:extension base="tns:BaseObjectType">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="children" nillable="true" type="tns:ArrayOfHierarchyObjectType"/>
          <xsd:element minOccurs="0" name="rootOfHierarchy" type="xsd:boolean"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ApplicationInfo">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="apiVersion" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="dbBuildNumber" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="tririgaBuildNumber" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfChildRecord">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="ChildRecord" nillable="true" type="tns:ChildRecord"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponseHelper">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="key" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="recordId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="status" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="value" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfModule">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Module" nillable="true" type="tns:Module"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfObjectTypeActionStep">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="ObjectTypeActionStep" nillable="true" type="tns:ObjectTypeActionStep"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="QueryMultiBoResponseColumn">
    <xsd:complexContent>
      <xsd:extension base="tns:QueryResponseColumn">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="bo" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="module" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="multiBoFieldIndex" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfBaseObjectType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="BaseObjectType" nillable="true" type="tns:BaseObjectType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="HttpSession">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="token" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfDisplayLabel">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="DisplayLabel" nillable="true" type="tns:DisplayLabel"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Tab">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="sections" nillable="true" type="tns:ArrayOfSection"/>
      <xsd:element minOccurs="0" name="tabId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="tabName" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ObjectTypeActionStep">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="action" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="actionId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="label" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeActionSteps" nillable="true" type="tns:ArrayOfObjectTypeActionStep"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="QueryResult">
    <xsd:complexContent>
      <xsd:extension base="tns:AbstractQueryResult">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="queryResponseHelpers" nillable="true" type="tns:ArrayOfQueryResponseHelper"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DisplayLabel">
    <xsd:sequence>
      <xsd:element name="fieldName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="label" nillable="true" type="xsd:string"/>
      <xsd:element name="sectionName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfActionItem">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="ActionItem" nillable="true" type="tns:ActionItem"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AssociationFilter">
    <xsd:sequence>
      <xsd:element name="associationName" type="xsd:string"/>
      <xsd:element name="moduleName" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeName" nillable="true" type="xsd:string"/>
      <xsd:element name="reverseAssociation" type="xsd:boolean"/>
      <xsd:element name="runTimeData" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfTransition">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Transition" nillable="true" type="tns:Transition"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfResponseHelper">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="ResponseHelper" nillable="true" type="tns:ResponseHelper"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfIntegrationRecord">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="IntegrationRecord" nillable="true" type="tns:IntegrationRecord"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ExtendedFormula">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="expression" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="parameters" nillable="true" type="tns:ArrayOfExtendedFormulaParam"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfIntegrationSection-1-">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="IntegrationSection" nillable="true" type="tns:IntegrationSection"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfHierarchyObjectType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="HierarchyObjectType" nillable="true" type="tns:HierarchyObjectType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfListItem">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="ListItem" nillable="true" type="tns:ListItem"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TriggerActions">
    <xsd:sequence>
      <xsd:element name="actionName" type="xsd:string"/>
      <xsd:element name="recordId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfTab">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Tab" nillable="true" type="tns:Tab"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfChildBaseObjectType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="ChildBaseObjectType" nillable="true" type="tns:ChildBaseObjectType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfKeywordSearchResult">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="KeywordSearchResult" nillable="true" type="tns:KeywordSearchResult"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="KeywordSearchResult">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="moduleId" type="xsd:int"/>
      <xsd:element minOccurs="0" name="moduleName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="objectTypeName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="recordIds" nillable="true" type="ns0:ArrayOfLong"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ObjectTypeAction">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="boActionSteps" nillable="true" type="tns:ArrayOfObjectTypeActionStep"/>
      <xsd:element minOccurs="0" name="guiId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="moduleId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="objectTypeId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="recordId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfAssociationRecord">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="AssociationRecord" nillable="true" type="tns:AssociationRecord"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SubAction">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="action" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="actionId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="label" nillable="true" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfState">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="State" nillable="true" type="tns:State"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IntegrationField">
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="value" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfConversionGroup">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="ConversionGroup" nillable="true" type="tns:ConversionGroup"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Row">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="fields" nillable="true" type="tns:ArrayOfField"/>
      <xsd:element minOccurs="0" name="recordId" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Record">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="currentState" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="guiId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="guiName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="moduleId" type="xsd:int"/>
      <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectPath" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="objectTypeId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="objectTypeName" nillable="true" type="xsd:string"/>
      <xsd:element minOccurs="0" name="parentId" type="xsd:long"/>
      <xsd:element minOccurs="0" name="sections" nillable="true" type="tns:ArrayOfRecordSection"/>
      <xsd:element minOccurs="0" name="tabs" nillable="true" type="tns:ArrayOfTab"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfField">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Field" nillable="true" type="tns:Field"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ArrayOfQueryMultiBoResponseHelper">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="QueryMultiBoResponseHelper" nillable="true" type="tns:QueryMultiBoResponseHelper"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>
  </wsdl:types>
  <wsdl:message name="getRecordDataHeaders">
    <wsdl:part element="tns:getRecordDataHeaders" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNamedQueryType">
    <wsdl:part element="tns:getNamedQueryType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDefaultGUIActions">
    <wsdl:part element="tns:getDefaultGUIActions" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getChildrenResponse">
    <wsdl:part element="tns:getChildrenResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadResponse">
    <wsdl:part element="tns:downloadResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGUIResponse">
    <wsdl:part element="tns:getGUIResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getChecksum">
    <wsdl:part element="tns:getChecksum" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDefaultGUIResponse">
    <wsdl:part element="tns:getDefaultGUIResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNamedQueryTypeResponse">
    <wsdl:part element="tns:getNamedQueryTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserLicensesResponse">
    <wsdl:part element="tns:getUserLicensesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrencyConversionRatesResponse">
    <wsdl:part element="tns:getCurrencyConversionRatesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypeListByModuleIdResponse">
    <wsdl:part element="tns:getObjectTypeListByModuleIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllAssociatedRecordsResponse">
    <wsdl:part element="tns:getAllAssociatedRecordsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedQueryMultiBoContinueResponse">
    <wsdl:part element="tns:runNamedQueryMultiBoContinueResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHierarchyMetadata">
    <wsdl:part element="tns:getHierarchyMetadata" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedQueryContinue">
    <wsdl:part element="tns:runNamedQueryContinue" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="registerResponse">
    <wsdl:part element="tns:registerResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="acceptActionItemsResponse">
    <wsdl:part element="tns:acceptActionItemsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrencies">
    <wsdl:part element="tns:getCurrencies" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedQueryResponse">
    <wsdl:part element="tns:runNamedQueryResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGUI">
    <wsdl:part element="tns:getGUI" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordState">
    <wsdl:part element="tns:getRecordState" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHttpSessionResponse">
    <wsdl:part element="tns:getHttpSessionResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runDynamicQuery">
    <wsdl:part element="tns:runDynamicQuery" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidDocumentTypeException">
    <wsdl:part element="tns:InvalidDocumentTypeException" name="InvalidDocumentTypeException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ModuleDoesNotExistException">
    <wsdl:part element="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedMetricQuery">
    <wsdl:part element="tns:runNamedMetricQuery" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="saveRecordResponse">
    <wsdl:part element="tns:saveRecordResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrenciesResponse">
    <wsdl:part element="tns:getCurrenciesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHierarchyMetadataByModuleNameResponse">
    <wsdl:part element="tns:getHierarchyMetadataByModuleNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deassociateRecords">
    <wsdl:part element="tns:deassociateRecords" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypeByNameResponse">
    <wsdl:part element="tns:getObjectTypeByNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="tns:Exception" name="Exception">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="register">
    <wsdl:part element="tns:register" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypeResponse">
    <wsdl:part element="tns:getObjectTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="copy">
    <wsdl:part element="tns:copy" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypeListByModuleName">
    <wsdl:part element="tns:getObjectTypeListByModuleName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProjectId">
    <wsdl:part element="tns:getProjectId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGUIsByName">
    <wsdl:part element="tns:getGUIsByName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getModuleId">
    <wsdl:part element="tns:getModuleId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getApplicationInfo">
    <wsdl:part element="tns:getApplicationInfo" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHttpSession">
    <wsdl:part element="tns:getHttpSession" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordStateResponse">
    <wsdl:part element="tns:getRecordStateResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ActionItemInvalidException">
    <wsdl:part element="tns:ActionItemInvalidException" name="ActionItemInvalidException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="delete">
    <wsdl:part element="tns:delete" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedQueryMultiBoLocalized">
    <wsdl:part element="tns:runNamedQueryMultiBoLocalized" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadToResponse">
    <wsdl:part element="tns:downloadToResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDefaultGUIStructureResponse">
    <wsdl:part element="tns:getDefaultGUIStructureResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadTo">
    <wsdl:part element="tns:downloadTo" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHierarchyMetadataByModuleIdResponse">
    <wsdl:part element="tns:getHierarchyMetadataByModuleIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypeId">
    <wsdl:part element="tns:getObjectTypeId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRequiredGuiFieldNames">
    <wsdl:part element="tns:getRequiredGuiFieldNames" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="triggerActions">
    <wsdl:part element="tns:triggerActions" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProjectsResponse">
    <wsdl:part element="tns:getProjectsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHierarchyMetadataByModuleName">
    <wsdl:part element="tns:getHierarchyMetadataByModuleName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHierarchyMetadataResponse">
    <wsdl:part element="tns:getHierarchyMetadataResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ObjectTypeDoesNotExistException">
    <wsdl:part element="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getChildren">
    <wsdl:part element="tns:getChildren" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDefaultGuiId">
    <wsdl:part element="tns:getDefaultGuiId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrencyConversionGroupsResponse">
    <wsdl:part element="tns:getCurrencyConversionGroupsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListDoesNotExistException">
    <wsdl:part element="tns:ListDoesNotExistException" name="ListDoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRootRecordId">
    <wsdl:part element="tns:getRootRecordId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRequiredGuiFieldNamesResponse">
    <wsdl:part element="tns:getRequiredGuiFieldNamesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypeListByModuleNameResponse">
    <wsdl:part element="tns:getObjectTypeListByModuleNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssociationDefinitionsResponse">
    <wsdl:part element="tns:getAssociationDefinitionsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ProjectDoesNotExistException">
    <wsdl:part element="tns:ProjectDoesNotExistException" name="ProjectDoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidContentException">
    <wsdl:part element="tns:InvalidContentException" name="InvalidContentException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedQuery">
    <wsdl:part element="tns:runNamedQuery" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableActionsResponse">
    <wsdl:part element="tns:getAvailableActionsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssociationDefinitions">
    <wsdl:part element="tns:getAssociationDefinitions" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableActions">
    <wsdl:part element="tns:getAvailableActions" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getModulesResponse">
    <wsdl:part element="tns:getModulesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getApplicationInfoResponse">
    <wsdl:part element="tns:getApplicationInfoResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedQueryMultiBoLocalizedResponse">
    <wsdl:part element="tns:runNamedQueryMultiBoLocalizedResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypeIdResponse">
    <wsdl:part element="tns:getObjectTypeIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="associateRecords">
    <wsdl:part element="tns:associateRecords" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getModuleIdResponse">
    <wsdl:part element="tns:getModuleIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDefaultGuiIdResponse">
    <wsdl:part element="tns:getDefaultGuiIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteResponse">
    <wsdl:part element="tns:deleteResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="acceptActionItems">
    <wsdl:part element="tns:acceptActionItems" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHierarchyMetadataByModuleId">
    <wsdl:part element="tns:getHierarchyMetadataByModuleId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypeByName">
    <wsdl:part element="tns:getObjectTypeByName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGUIsResponse">
    <wsdl:part element="tns:getGUIsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCurrencyConversionRates">
    <wsdl:part element="tns:deleteCurrencyConversionRates" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProjects">
    <wsdl:part element="tns:getProjects" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runDynamicQueryResponse">
    <wsdl:part element="tns:runDynamicQueryResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGUIs">
    <wsdl:part element="tns:getGUIs" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RecordDoesNotExistException">
    <wsdl:part element="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="triggerActionsResponse">
    <wsdl:part element="tns:triggerActionsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGUIsByNameResponse">
    <wsdl:part element="tns:getGUIsByNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GuiDoesNotExistException">
    <wsdl:part element="tns:GuiDoesNotExistException" name="GuiDoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ActionDoesNotExistException">
    <wsdl:part element="tns:ActionDoesNotExistException" name="ActionDoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="upload">
    <wsdl:part element="tns:upload" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedQueryMultiBoResponse">
    <wsdl:part element="tns:runNamedQueryMultiBoResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deassociateRecordsResponse">
    <wsdl:part element="tns:deassociateRecordsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRootRecordIdResponse">
    <wsdl:part element="tns:getRootRecordIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDefaultGUIStructure">
    <wsdl:part element="tns:getDefaultGUIStructure" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="QueryDoesNotExistException">
    <wsdl:part element="tns:QueryDoesNotExistException" name="QueryDoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="uploadFrom">
    <wsdl:part element="tns:uploadFrom" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGUIStateTransitions">
    <wsdl:part element="tns:getGUIStateTransitions" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="keywordSearch">
    <wsdl:part element="tns:keywordSearch" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCurrencyConversionRatesResponse">
    <wsdl:part element="tns:deleteCurrencyConversionRatesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypeActions">
    <wsdl:part element="tns:getObjectTypeActions" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="uploadFromResponse">
    <wsdl:part element="tns:uploadFromResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runDynamicQueryContinue">
    <wsdl:part element="tns:runDynamicQueryContinue" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedQueryMultiBo">
    <wsdl:part element="tns:runNamedQueryMultiBo" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="saveRecord">
    <wsdl:part element="tns:saveRecord" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="download">
    <wsdl:part element="tns:download" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssociatedRecords">
    <wsdl:part element="tns:getAssociatedRecords" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="uploadResponse">
    <wsdl:part element="tns:uploadResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContentLength">
    <wsdl:part element="tns:getContentLength" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getListItems">
    <wsdl:part element="tns:getListItems" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserLicenses">
    <wsdl:part element="tns:getUserLicenses" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordDataHeadersResponse">
    <wsdl:part element="tns:getRecordDataHeadersResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedMetricQueryContinue">
    <wsdl:part element="tns:runNamedMetricQueryContinue" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedQueryMultiBoContinue">
    <wsdl:part element="tns:runNamedQueryMultiBoContinue" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGUIStateTransitionsResponse">
    <wsdl:part element="tns:getGUIStateTransitionsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedMetricQueryContinueResponse">
    <wsdl:part element="tns:runNamedMetricQueryContinueResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectType">
    <wsdl:part element="tns:getObjectType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AccessException">
    <wsdl:part element="tns:AccessException" name="AccessException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="keywordSearchResponse">
    <wsdl:part element="tns:keywordSearchResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTargetRecords">
    <wsdl:part element="tns:getTargetRecords" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContentLengthResponse">
    <wsdl:part element="tns:getContentLengthResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getChecksumResponse">
    <wsdl:part element="tns:getChecksumResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidContinuationTokenException">
    <wsdl:part element="tns:InvalidContinuationTokenException" name="InvalidContinuationTokenException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="putCurrencyConversionRates">
    <wsdl:part element="tns:putCurrencyConversionRates" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="terminateSessionResponse">
    <wsdl:part element="tns:terminateSessionResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypeListByModuleId">
    <wsdl:part element="tns:getObjectTypeListByModuleId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="terminateSession">
    <wsdl:part element="tns:terminateSession" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTargetRecordsResponse">
    <wsdl:part element="tns:getTargetRecordsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getListByTypesResponse">
    <wsdl:part element="tns:getListByTypesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssociationDefinitionsByName">
    <wsdl:part element="tns:getAssociationDefinitionsByName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getListItemsResponse">
    <wsdl:part element="tns:getListItemsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypeActionsResponse">
    <wsdl:part element="tns:getObjectTypeActionsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrencyConversionGroups">
    <wsdl:part element="tns:getCurrencyConversionGroups" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrencyConversionRates">
    <wsdl:part element="tns:getCurrencyConversionRates" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getModules">
    <wsdl:part element="tns:getModules" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runDynamicQueryContinueResponse">
    <wsdl:part element="tns:runDynamicQueryContinueResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedQueryContinueResponse">
    <wsdl:part element="tns:runNamedQueryContinueResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllAssociatedRecords">
    <wsdl:part element="tns:getAllAssociatedRecords" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="runNamedMetricQueryResponse">
    <wsdl:part element="tns:runNamedMetricQueryResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDefaultGUI">
    <wsdl:part element="tns:getDefaultGUI" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionItems">
    <wsdl:part element="tns:getActionItems" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="copyResponse">
    <wsdl:part element="tns:copyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDefaultGUIActionsResponse">
    <wsdl:part element="tns:getDefaultGUIActionsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssociationDefinitionsByNameResponse">
    <wsdl:part element="tns:getAssociationDefinitionsByNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContentFieldsDefinition">
    <wsdl:part element="tns:getContentFieldsDefinition" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getListByTypes">
    <wsdl:part element="tns:getListByTypes" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProjectIdResponse">
    <wsdl:part element="tns:getProjectIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="putCurrencyConversionRatesResponse">
    <wsdl:part element="tns:putCurrencyConversionRatesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionItemsResponse">
    <wsdl:part element="tns:getActionItemsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getContentFieldsDefinitionResponse">
    <wsdl:part element="tns:getContentFieldsDefinitionResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidArgumentException">
    <wsdl:part element="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="associateRecordsResponse">
    <wsdl:part element="tns:associateRecordsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssociatedRecordsResponse">
    <wsdl:part element="tns:getAssociatedRecordsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="TririgaWSPortType">
    <wsdl:operation name="getRecordDataHeaders">
      <wsdl:input message="tns:getRecordDataHeaders" name="getRecordDataHeaders">
    </wsdl:input>
      <wsdl:output message="tns:getRecordDataHeadersResponse" name="getRecordDataHeadersResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="acceptActionItems">
      <wsdl:input message="tns:acceptActionItems" name="acceptActionItems">
    </wsdl:input>
      <wsdl:output message="tns:acceptActionItemsResponse" name="acceptActionItemsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ActionItemInvalidException" name="ActionItemInvalidException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNamedQueryType">
      <wsdl:input message="tns:getNamedQueryType" name="getNamedQueryType">
    </wsdl:input>
      <wsdl:output message="tns:getNamedQueryTypeResponse" name="getNamedQueryTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:QueryDoesNotExistException" name="QueryDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHierarchyMetadataByModuleId">
      <wsdl:input message="tns:getHierarchyMetadataByModuleId" name="getHierarchyMetadataByModuleId">
    </wsdl:input>
      <wsdl:output message="tns:getHierarchyMetadataByModuleIdResponse" name="getHierarchyMetadataByModuleIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypeByName">
      <wsdl:input message="tns:getObjectTypeByName" name="getObjectTypeByName">
    </wsdl:input>
      <wsdl:output message="tns:getObjectTypeByNameResponse" name="getObjectTypeByNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDefaultGUIActions">
      <wsdl:input message="tns:getDefaultGUIActions" name="getDefaultGUIActions">
    </wsdl:input>
      <wsdl:output message="tns:getDefaultGUIActionsResponse" name="getDefaultGUIActionsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:GuiDoesNotExistException" name="GuiDoesNotExistException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCurrencyConversionRates">
      <wsdl:input message="tns:deleteCurrencyConversionRates" name="deleteCurrencyConversionRates">
    </wsdl:input>
      <wsdl:output message="tns:deleteCurrencyConversionRatesResponse" name="deleteCurrencyConversionRatesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProjects">
      <wsdl:input message="tns:getProjects" name="getProjects">
    </wsdl:input>
      <wsdl:output message="tns:getProjectsResponse" name="getProjectsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChecksum">
      <wsdl:input message="tns:getChecksum" name="getChecksum">
    </wsdl:input>
      <wsdl:output message="tns:getChecksumResponse" name="getChecksumResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidContentException" name="InvalidContentException">
    </wsdl:fault>
      <wsdl:fault message="tns:AccessException" name="AccessException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidDocumentTypeException" name="InvalidDocumentTypeException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGUIs">
      <wsdl:input message="tns:getGUIs" name="getGUIs">
    </wsdl:input>
      <wsdl:output message="tns:getGUIsResponse" name="getGUIsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="upload">
      <wsdl:input message="tns:upload" name="upload">
    </wsdl:input>
      <wsdl:output message="tns:uploadResponse" name="uploadResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidContentException" name="InvalidContentException">
    </wsdl:fault>
      <wsdl:fault message="tns:AccessException" name="AccessException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidDocumentTypeException" name="InvalidDocumentTypeException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHierarchyMetadata">
      <wsdl:input message="tns:getHierarchyMetadata" name="getHierarchyMetadata">
    </wsdl:input>
      <wsdl:output message="tns:getHierarchyMetadataResponse" name="getHierarchyMetadataResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runNamedQueryContinue">
      <wsdl:input message="tns:runNamedQueryContinue" name="runNamedQueryContinue">
    </wsdl:input>
      <wsdl:output message="tns:runNamedQueryContinueResponse" name="runNamedQueryContinueResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidContinuationTokenException" name="InvalidContinuationTokenException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrencies">
      <wsdl:input message="tns:getCurrencies" name="getCurrencies">
    </wsdl:input>
      <wsdl:output message="tns:getCurrenciesResponse" name="getCurrenciesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDefaultGUIStructure">
      <wsdl:input message="tns:getDefaultGUIStructure" name="getDefaultGUIStructure">
    </wsdl:input>
      <wsdl:output message="tns:getDefaultGUIStructureResponse" name="getDefaultGUIStructureResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGUI">
      <wsdl:input message="tns:getGUI" name="getGUI">
    </wsdl:input>
      <wsdl:output message="tns:getGUIResponse" name="getGUIResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:GuiDoesNotExistException" name="GuiDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRecordState">
      <wsdl:input message="tns:getRecordState" name="getRecordState">
    </wsdl:input>
      <wsdl:output message="tns:getRecordStateResponse" name="getRecordStateResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadFrom">
      <wsdl:input message="tns:uploadFrom" name="uploadFrom">
    </wsdl:input>
      <wsdl:output message="tns:uploadFromResponse" name="uploadFromResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGUIStateTransitions">
      <wsdl:input message="tns:getGUIStateTransitions" name="getGUIStateTransitions">
    </wsdl:input>
      <wsdl:output message="tns:getGUIStateTransitionsResponse" name="getGUIStateTransitionsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="keywordSearch">
      <wsdl:input message="tns:keywordSearch" name="keywordSearch">
    </wsdl:input>
      <wsdl:output message="tns:keywordSearchResponse" name="keywordSearchResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ProjectDoesNotExistException" name="ProjectDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypeActions">
      <wsdl:input message="tns:getObjectTypeActions" name="getObjectTypeActions">
    </wsdl:input>
      <wsdl:output message="tns:getObjectTypeActionsResponse" name="getObjectTypeActionsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runDynamicQuery">
      <wsdl:input message="tns:runDynamicQuery" name="runDynamicQuery">
    </wsdl:input>
      <wsdl:output message="tns:runDynamicQueryResponse" name="runDynamicQueryResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ProjectDoesNotExistException" name="ProjectDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runDynamicQueryContinue">
      <wsdl:input message="tns:runDynamicQueryContinue" name="runDynamicQueryContinue">
    </wsdl:input>
      <wsdl:output message="tns:runDynamicQueryContinueResponse" name="runDynamicQueryContinueResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidContinuationTokenException" name="InvalidContinuationTokenException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runNamedQueryMultiBo">
      <wsdl:input message="tns:runNamedQueryMultiBo" name="runNamedQueryMultiBo">
    </wsdl:input>
      <wsdl:output message="tns:runNamedQueryMultiBoResponse" name="runNamedQueryMultiBoResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ProjectDoesNotExistException" name="ProjectDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:QueryDoesNotExistException" name="QueryDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveRecord">
      <wsdl:input message="tns:saveRecord" name="saveRecord">
    </wsdl:input>
      <wsdl:output message="tns:saveRecordResponse" name="saveRecordResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runNamedMetricQuery">
      <wsdl:input message="tns:runNamedMetricQuery" name="runNamedMetricQuery">
    </wsdl:input>
      <wsdl:output message="tns:runNamedMetricQueryResponse" name="runNamedMetricQueryResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:QueryDoesNotExistException" name="QueryDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="download">
      <wsdl:input message="tns:download" name="download">
    </wsdl:input>
      <wsdl:output message="tns:downloadResponse" name="downloadResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidContentException" name="InvalidContentException">
    </wsdl:fault>
      <wsdl:fault message="tns:AccessException" name="AccessException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidDocumentTypeException" name="InvalidDocumentTypeException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedRecords">
      <wsdl:input message="tns:getAssociatedRecords" name="getAssociatedRecords">
    </wsdl:input>
      <wsdl:output message="tns:getAssociatedRecordsResponse" name="getAssociatedRecordsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deassociateRecords">
      <wsdl:input message="tns:deassociateRecords" name="deassociateRecords">
    </wsdl:input>
      <wsdl:output message="tns:deassociateRecordsResponse" name="deassociateRecordsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentLength">
      <wsdl:input message="tns:getContentLength" name="getContentLength">
    </wsdl:input>
      <wsdl:output message="tns:getContentLengthResponse" name="getContentLengthResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidContentException" name="InvalidContentException">
    </wsdl:fault>
      <wsdl:fault message="tns:AccessException" name="AccessException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidDocumentTypeException" name="InvalidDocumentTypeException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getListItems">
      <wsdl:input message="tns:getListItems" name="getListItems">
    </wsdl:input>
      <wsdl:output message="tns:getListItemsResponse" name="getListItemsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ListDoesNotExistException" name="ListDoesNotExistException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserLicenses">
      <wsdl:input message="tns:getUserLicenses" name="getUserLicenses">
    </wsdl:input>
      <wsdl:output message="tns:getUserLicensesResponse" name="getUserLicensesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="runNamedMetricQueryContinue">
      <wsdl:input message="tns:runNamedMetricQueryContinue" name="runNamedMetricQueryContinue">
    </wsdl:input>
      <wsdl:output message="tns:runNamedMetricQueryContinueResponse" name="runNamedMetricQueryContinueResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidContinuationTokenException" name="InvalidContinuationTokenException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runNamedQueryMultiBoContinue">
      <wsdl:input message="tns:runNamedQueryMultiBoContinue" name="runNamedQueryMultiBoContinue">
    </wsdl:input>
      <wsdl:output message="tns:runNamedQueryMultiBoContinueResponse" name="runNamedQueryMultiBoContinueResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidContinuationTokenException" name="InvalidContinuationTokenException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="register">
      <wsdl:input message="tns:register" name="register">
    </wsdl:input>
      <wsdl:output message="tns:registerResponse" name="registerResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copy">
      <wsdl:input message="tns:copy" name="copy">
    </wsdl:input>
      <wsdl:output message="tns:copyResponse" name="copyResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidContentException" name="InvalidContentException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:AccessException" name="AccessException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidDocumentTypeException" name="InvalidDocumentTypeException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypeListByModuleName">
      <wsdl:input message="tns:getObjectTypeListByModuleName" name="getObjectTypeListByModuleName">
    </wsdl:input>
      <wsdl:output message="tns:getObjectTypeListByModuleNameResponse" name="getObjectTypeListByModuleNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProjectId">
      <wsdl:input message="tns:getProjectId" name="getProjectId">
    </wsdl:input>
      <wsdl:output message="tns:getProjectIdResponse" name="getProjectIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGUIsByName">
      <wsdl:input message="tns:getGUIsByName" name="getGUIsByName">
    </wsdl:input>
      <wsdl:output message="tns:getGUIsByNameResponse" name="getGUIsByNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModuleId">
      <wsdl:input message="tns:getModuleId" name="getModuleId">
    </wsdl:input>
      <wsdl:output message="tns:getModuleIdResponse" name="getModuleIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectType">
      <wsdl:input message="tns:getObjectType" name="getObjectType">
    </wsdl:input>
      <wsdl:output message="tns:getObjectTypeResponse" name="getObjectTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getApplicationInfo">
      <wsdl:input message="tns:getApplicationInfo" name="getApplicationInfo">
    </wsdl:input>
      <wsdl:output message="tns:getApplicationInfoResponse" name="getApplicationInfoResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getHttpSession">
      <wsdl:input message="tns:getHttpSession" name="getHttpSession">
    </wsdl:input>
      <wsdl:output message="tns:getHttpSessionResponse" name="getHttpSessionResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTargetRecords">
      <wsdl:input message="tns:getTargetRecords" name="getTargetRecords">
    </wsdl:input>
      <wsdl:output message="tns:getTargetRecordsResponse" name="getTargetRecordsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="putCurrencyConversionRates">
      <wsdl:input message="tns:putCurrencyConversionRates" name="putCurrencyConversionRates">
    </wsdl:input>
      <wsdl:output message="tns:putCurrencyConversionRatesResponse" name="putCurrencyConversionRatesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypeListByModuleId">
      <wsdl:input message="tns:getObjectTypeListByModuleId" name="getObjectTypeListByModuleId">
    </wsdl:input>
      <wsdl:output message="tns:getObjectTypeListByModuleIdResponse" name="getObjectTypeListByModuleIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="terminateSession">
      <wsdl:input message="tns:terminateSession" name="terminateSession">
    </wsdl:input>
      <wsdl:output message="tns:terminateSessionResponse" name="terminateSessionResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <wsdl:input message="tns:delete" name="delete">
    </wsdl:input>
      <wsdl:output message="tns:deleteResponse" name="deleteResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidContentException" name="InvalidContentException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidDocumentTypeException" name="InvalidDocumentTypeException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runNamedQueryMultiBoLocalized">
      <wsdl:input message="tns:runNamedQueryMultiBoLocalized" name="runNamedQueryMultiBoLocalized">
    </wsdl:input>
      <wsdl:output message="tns:runNamedQueryMultiBoLocalizedResponse" name="runNamedQueryMultiBoLocalizedResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ProjectDoesNotExistException" name="ProjectDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:QueryDoesNotExistException" name="QueryDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="downloadTo">
      <wsdl:input message="tns:downloadTo" name="downloadTo">
    </wsdl:input>
      <wsdl:output message="tns:downloadToResponse" name="downloadToResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAssociationDefinitionsByName">
      <wsdl:input message="tns:getAssociationDefinitionsByName" name="getAssociationDefinitionsByName">
    </wsdl:input>
      <wsdl:output message="tns:getAssociationDefinitionsByNameResponse" name="getAssociationDefinitionsByNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypeId">
      <wsdl:input message="tns:getObjectTypeId" name="getObjectTypeId">
    </wsdl:input>
      <wsdl:output message="tns:getObjectTypeIdResponse" name="getObjectTypeIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRequiredGuiFieldNames">
      <wsdl:input message="tns:getRequiredGuiFieldNames" name="getRequiredGuiFieldNames">
    </wsdl:input>
      <wsdl:output message="tns:getRequiredGuiFieldNamesResponse" name="getRequiredGuiFieldNamesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="triggerActions">
      <wsdl:input message="tns:triggerActions" name="triggerActions">
    </wsdl:input>
      <wsdl:output message="tns:triggerActionsResponse" name="triggerActionsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ActionDoesNotExistException" name="ActionDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHierarchyMetadataByModuleName">
      <wsdl:input message="tns:getHierarchyMetadataByModuleName" name="getHierarchyMetadataByModuleName">
    </wsdl:input>
      <wsdl:output message="tns:getHierarchyMetadataByModuleNameResponse" name="getHierarchyMetadataByModuleNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChildren">
      <wsdl:input message="tns:getChildren" name="getChildren">
    </wsdl:input>
      <wsdl:output message="tns:getChildrenResponse" name="getChildrenResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDefaultGuiId">
      <wsdl:input message="tns:getDefaultGuiId" name="getDefaultGuiId">
    </wsdl:input>
      <wsdl:output message="tns:getDefaultGuiIdResponse" name="getDefaultGuiIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrencyConversionGroups">
      <wsdl:input message="tns:getCurrencyConversionGroups" name="getCurrencyConversionGroups">
    </wsdl:input>
      <wsdl:output message="tns:getCurrencyConversionGroupsResponse" name="getCurrencyConversionGroupsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRootRecordId">
      <wsdl:input message="tns:getRootRecordId" name="getRootRecordId">
    </wsdl:input>
      <wsdl:output message="tns:getRootRecordIdResponse" name="getRootRecordIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrencyConversionRates">
      <wsdl:input message="tns:getCurrencyConversionRates" name="getCurrencyConversionRates">
    </wsdl:input>
      <wsdl:output message="tns:getCurrencyConversionRatesResponse" name="getCurrencyConversionRatesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModules">
      <wsdl:input message="tns:getModules" name="getModules">
    </wsdl:input>
      <wsdl:output message="tns:getModulesResponse" name="getModulesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllAssociatedRecords">
      <wsdl:input message="tns:getAllAssociatedRecords" name="getAllAssociatedRecords">
    </wsdl:input>
      <wsdl:output message="tns:getAllAssociatedRecordsResponse" name="getAllAssociatedRecordsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDefaultGUI">
      <wsdl:input message="tns:getDefaultGUI" name="getDefaultGUI">
    </wsdl:input>
      <wsdl:output message="tns:getDefaultGUIResponse" name="getDefaultGUIResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:GuiDoesNotExistException" name="GuiDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActionItems">
      <wsdl:input message="tns:getActionItems" name="getActionItems">
    </wsdl:input>
      <wsdl:output message="tns:getActionItemsResponse" name="getActionItemsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runNamedQuery">
      <wsdl:input message="tns:runNamedQuery" name="runNamedQuery">
    </wsdl:input>
      <wsdl:output message="tns:runNamedQueryResponse" name="runNamedQueryResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordDoesNotExistException" name="RecordDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ProjectDoesNotExistException" name="ProjectDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:QueryDoesNotExistException" name="QueryDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociationDefinitions">
      <wsdl:input message="tns:getAssociationDefinitions" name="getAssociationDefinitions">
    </wsdl:input>
      <wsdl:output message="tns:getAssociationDefinitionsResponse" name="getAssociationDefinitionsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableActions">
      <wsdl:input message="tns:getAvailableActions" name="getAvailableActions">
    </wsdl:input>
      <wsdl:output message="tns:getAvailableActionsResponse" name="getAvailableActionsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentFieldsDefinition">
      <wsdl:input message="tns:getContentFieldsDefinition" name="getContentFieldsDefinition">
    </wsdl:input>
      <wsdl:output message="tns:getContentFieldsDefinitionResponse" name="getContentFieldsDefinitionResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:AccessException" name="AccessException">
    </wsdl:fault>
      <wsdl:fault message="tns:ModuleDoesNotExistException" name="ModuleDoesNotExistException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getListByTypes">
      <wsdl:input message="tns:getListByTypes" name="getListByTypes">
    </wsdl:input>
      <wsdl:output message="tns:getListByTypesResponse" name="getListByTypesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ObjectTypeDoesNotExistException" name="ObjectTypeDoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateRecords">
      <wsdl:input message="tns:associateRecords" name="associateRecords">
    </wsdl:input>
      <wsdl:output message="tns:associateRecordsResponse" name="associateRecordsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="TririgaWSSoapBinding" type="tns:TririgaWSPortType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getRecordDataHeaders">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getRecordDataHeaders">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRecordDataHeadersResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RecordDoesNotExistException">
        <soap12:fault name="RecordDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="acceptActionItems">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="acceptActionItems">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="acceptActionItemsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ActionItemInvalidException">
        <soap12:fault name="ActionItemInvalidException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNamedQueryType">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getNamedQueryType">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNamedQueryTypeResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="QueryDoesNotExistException">
        <soap12:fault name="QueryDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHierarchyMetadataByModuleId">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getHierarchyMetadataByModuleId">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getHierarchyMetadataByModuleIdResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypeByName">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectTypeByName">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypeByNameResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDefaultGUIActions">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getDefaultGUIActions">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDefaultGUIActionsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GuiDoesNotExistException">
        <soap12:fault name="GuiDoesNotExistException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProjects">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getProjects">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProjectsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCurrencyConversionRates">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="deleteCurrencyConversionRates">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteCurrencyConversionRatesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGUIs">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getGUIs">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGUIsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChecksum">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getChecksum">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getChecksumResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidContentException">
        <soap12:fault name="InvalidContentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AccessException">
        <soap12:fault name="AccessException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidDocumentTypeException">
        <soap12:fault name="InvalidDocumentTypeException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="upload">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="upload">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="uploadResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidContentException">
        <soap12:fault name="InvalidContentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AccessException">
        <soap12:fault name="AccessException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidDocumentTypeException">
        <soap12:fault name="InvalidDocumentTypeException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHierarchyMetadata">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getHierarchyMetadata">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getHierarchyMetadataResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runNamedQueryContinue">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="runNamedQueryContinue">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="runNamedQueryContinueResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidContinuationTokenException">
        <soap12:fault name="InvalidContinuationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrencies">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getCurrencies">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCurrenciesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDefaultGUIStructure">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getDefaultGUIStructure">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDefaultGUIStructureResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGUI">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getGUI">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGUIResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RecordDoesNotExistException">
        <soap12:fault name="RecordDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GuiDoesNotExistException">
        <soap12:fault name="GuiDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRecordState">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getRecordState">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRecordStateResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadFrom">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="uploadFrom">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="uploadFromResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGUIStateTransitions">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getGUIStateTransitions">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGUIStateTransitionsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="keywordSearch">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="keywordSearch">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="keywordSearchResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ProjectDoesNotExistException">
        <soap12:fault name="ProjectDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypeActions">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectTypeActions">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypeActionsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runDynamicQuery">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="runDynamicQuery">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="runDynamicQueryResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RecordDoesNotExistException">
        <soap12:fault name="RecordDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ProjectDoesNotExistException">
        <soap12:fault name="ProjectDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runDynamicQueryContinue">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="runDynamicQueryContinue">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="runDynamicQueryContinueResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidContinuationTokenException">
        <soap12:fault name="InvalidContinuationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runNamedQueryMultiBo">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="runNamedQueryMultiBo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="runNamedQueryMultiBoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RecordDoesNotExistException">
        <soap12:fault name="RecordDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ProjectDoesNotExistException">
        <soap12:fault name="ProjectDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="QueryDoesNotExistException">
        <soap12:fault name="QueryDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveRecord">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="saveRecord">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="saveRecordResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runNamedMetricQuery">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="runNamedMetricQuery">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="runNamedMetricQueryResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RecordDoesNotExistException">
        <soap12:fault name="RecordDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="QueryDoesNotExistException">
        <soap12:fault name="QueryDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="download">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="download">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="downloadResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidContentException">
        <soap12:fault name="InvalidContentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AccessException">
        <soap12:fault name="AccessException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidDocumentTypeException">
        <soap12:fault name="InvalidDocumentTypeException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedRecords">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getAssociatedRecords">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociatedRecordsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RecordDoesNotExistException">
        <soap12:fault name="RecordDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deassociateRecords">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="deassociateRecords">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deassociateRecordsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentLength">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getContentLength">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getContentLengthResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidContentException">
        <soap12:fault name="InvalidContentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AccessException">
        <soap12:fault name="AccessException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidDocumentTypeException">
        <soap12:fault name="InvalidDocumentTypeException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getListItems">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getListItems">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getListItemsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ListDoesNotExistException">
        <soap12:fault name="ListDoesNotExistException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserLicenses">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getUserLicenses">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserLicensesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="runNamedMetricQueryContinue">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="runNamedMetricQueryContinue">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="runNamedMetricQueryContinueResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidContinuationTokenException">
        <soap12:fault name="InvalidContinuationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runNamedQueryMultiBoContinue">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="runNamedQueryMultiBoContinue">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="runNamedQueryMultiBoContinueResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidContinuationTokenException">
        <soap12:fault name="InvalidContinuationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="register">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="register">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="registerResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copy">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="copy">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="copyResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidContentException">
        <soap12:fault name="InvalidContentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RecordDoesNotExistException">
        <soap12:fault name="RecordDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AccessException">
        <soap12:fault name="AccessException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidDocumentTypeException">
        <soap12:fault name="InvalidDocumentTypeException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypeListByModuleName">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectTypeListByModuleName">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypeListByModuleNameResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProjectId">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getProjectId">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProjectIdResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGUIsByName">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getGUIsByName">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGUIsByNameResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModuleId">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getModuleId">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getModuleIdResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectType">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectType">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypeResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getApplicationInfo">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getApplicationInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getApplicationInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getHttpSession">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getHttpSession">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getHttpSessionResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTargetRecords">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getTargetRecords">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTargetRecordsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="putCurrencyConversionRates">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="putCurrencyConversionRates">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="putCurrencyConversionRatesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypeListByModuleId">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectTypeListByModuleId">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypeListByModuleIdResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="terminateSession">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="terminateSession">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="terminateSessionResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="delete">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidContentException">
        <soap12:fault name="InvalidContentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidDocumentTypeException">
        <soap12:fault name="InvalidDocumentTypeException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runNamedQueryMultiBoLocalized">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="runNamedQueryMultiBoLocalized">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="runNamedQueryMultiBoLocalizedResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RecordDoesNotExistException">
        <soap12:fault name="RecordDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ProjectDoesNotExistException">
        <soap12:fault name="ProjectDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="QueryDoesNotExistException">
        <soap12:fault name="QueryDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="downloadTo">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="downloadTo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="downloadToResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAssociationDefinitionsByName">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getAssociationDefinitionsByName">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociationDefinitionsByNameResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypeId">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectTypeId">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypeIdResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRequiredGuiFieldNames">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getRequiredGuiFieldNames">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRequiredGuiFieldNamesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="triggerActions">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="triggerActions">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="triggerActionsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RecordDoesNotExistException">
        <soap12:fault name="RecordDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ActionDoesNotExistException">
        <soap12:fault name="ActionDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHierarchyMetadataByModuleName">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getHierarchyMetadataByModuleName">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getHierarchyMetadataByModuleNameResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChildren">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getChildren">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getChildrenResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RecordDoesNotExistException">
        <soap12:fault name="RecordDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDefaultGuiId">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getDefaultGuiId">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDefaultGuiIdResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrencyConversionGroups">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getCurrencyConversionGroups">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCurrencyConversionGroupsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRootRecordId">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getRootRecordId">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRootRecordIdResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrencyConversionRates">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getCurrencyConversionRates">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCurrencyConversionRatesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModules">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getModules">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getModulesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllAssociatedRecords">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getAllAssociatedRecords">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllAssociatedRecordsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RecordDoesNotExistException">
        <soap12:fault name="RecordDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDefaultGUI">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getDefaultGUI">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDefaultGUIResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RecordDoesNotExistException">
        <soap12:fault name="RecordDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GuiDoesNotExistException">
        <soap12:fault name="GuiDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActionItems">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getActionItems">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActionItemsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="runNamedQuery">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="runNamedQuery">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="runNamedQueryResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RecordDoesNotExistException">
        <soap12:fault name="RecordDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ProjectDoesNotExistException">
        <soap12:fault name="ProjectDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="QueryDoesNotExistException">
        <soap12:fault name="QueryDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociationDefinitions">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getAssociationDefinitions">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssociationDefinitionsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableActions">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getAvailableActions">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableActionsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentFieldsDefinition">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getContentFieldsDefinition">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getContentFieldsDefinitionResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AccessException">
        <soap12:fault name="AccessException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ModuleDoesNotExistException">
        <soap12:fault name="ModuleDoesNotExistException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getListByTypes">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getListByTypes">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getListByTypesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectTypeDoesNotExistException">
        <soap12:fault name="ObjectTypeDoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap12:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateRecords">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="associateRecords">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="associateRecordsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap12:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="TririgaWS">
    <wsdl:port binding="tns:TririgaWSSoapBinding" name="TririgaWSPort">
      <soap12:address location="http://localhost:8001/ws/TririgaWS"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>